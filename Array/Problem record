40. Combination Sum II(Med).py
递归的演示！

78. Subsets(Mid):
Backtracking,  Lexicographic (Binary Sorted) Subsets
https://leetcode.com/problems/subsets/solution/

79. Word Search(Mid).py

120. Triangle

152. Maximum Product Subarray

238. Product of Array Except Self(Med).py


287. Find the Duplicate Number
Approach 3: Floyd's Tortoise and Hare (Cycle Detection)

289. Game of Life(Med).py

442. Find All Duplicates in an Array(Med).py

457. Circular Array Loop(Med).py

560. Subarray Sum Equals K(Med).py

565. Array Nesting(Med).py

621. Task Scheduler(Med).py

670. Maximum Swap(Med).py
做出来了，需要看看最优解

695. Max Area of Island(Med).py

713. Subarray Product Less Than K(Med).py

714. Best Time to Buy and Sell Stock with Transaction Fee(Med).py
Greed

718. Maximum Length of Repeated Subarray(Med).py

769. Max Chunks To Make Sorted(Med).py

775. Global and Local Inversions(Med).py

746. Min Cost Climbing Stairs(Easy).py

835. Image Overlap(Med).py

870. Advantage Shuffle(Med).py

907. Sum of Subarray Minimums(Med).py
重点，用到栈！
https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170750/C%2B%2BJavaPython-Stack-Solution
https://buptwc.com/2018/09/16/Leetcode-907-Sum-of-Subarray-Minimums/

915. Partition Array into Disjoint Intervals(Med).py

918. Maximum Sum Circular Subarray(Med).py
https://leetcode.com/problems/maximum-sum-circular-subarray/discuss/178422/One-Pass

926. Flip String to Monotone Increasing(Med).py

945. Minimum Increment to Make Array Unique(Med).py
https://leetcode.com/problems/minimum-increment-to-make-array-unique/discuss/197687/JavaC%2B%2BPython-Straight-Forward

950. Reveal Cards In Increasing Order(Med).py
https://leetcode.com/problems/reveal-cards-in-increasing-order/discuss/200515/JavaC%2B%2BPython-Simulate-the-Reversed-Process
python collections 要练习用

954. Array of Doubled Pairs(Med).py

969. Pancake Sorting(Med).py

974. Subarray Sums Divisible by K(Med).py

978. Longest Turbulent Subarray(Med).py

1011. Capacity To Ship Packages Within D Days(Med).py

1014. Best Sightseeing Pair(Med).py
#还是类似贪心，要看看

1035. Uncrossed Lines(Med).py
最长公共子序列
https://zh.wikipedia.org/wiki/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97

Array\1040. Moving Stones Until Consecutive II(Med).py
windows的问题


Array\1053. Previous Permutation With One Swap(Med).py

Array\1109. Corporate Flight Bookings(Med).py

Array\1144. Decrease Elements To Make Array Zigzag(Med).py

Array\1177. Can Make Palindrome from Substring(Med).py
这个没看懂，之后看一下

Array\1208. Get Equal Substrings Within Budget(Med).py

#sliding windows的问题

1217. Play with Chips(Easy).py

Array\1233. Remove Sub-Folders from the Filesystem(Med).py

Array\1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold(Med).py
prefix sum！！

1275. Find Winner on a Tic Tac Toe Game(Easy).py

Array\1277. Count Square Submatrices with All Ones(Med).py

1337. The K Weakest Rows in a Matrix(Easy).py

heapq --- 堆队列算法
这个模块提供了堆队列算法的实现，也称为优先队列算法。

堆是一个二叉树，它的每个父节点的值都只会小于或大于所有孩子节点（的值）。它使用了数组来实现：
 从零开始计数，对于所有的 k ，都有 heap[k] <= heap[2*k+1] 和 heap[k] <= heap[2*k+2]。 
 为了便于比较，不存在的元素被认为是无限大。 堆最有趣的特性在于最小的元素总是在根结点：heap[0]。

heapq.heappush(heap, item)
将 item 的值加入 heap 中，保持堆的不变性。

heapq.heappop(heap)
弹出并返回 heap 的最小的元素，保持堆的不变性。如果堆为空，抛出 IndexError 。使用 heap[0] ，可以只访问最小的元素而不弹出它

1351. Count Negative Numbers in a Sorted Matrix(Easy).py

1365. How Many Numbers Are Smaller Than the Current Number(Easy).py

1380. Lucky Numbers in a Matrix(Easy)


\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xe8\xf3\xff\xff\xff\x2f\x74\x6d\x70\x2f\x68\x65\x6c\x6c\x6f\x2e\x74\x78\x74\x00\x5b\xb8\x08\x00\x00\x00\xb9\xff\x01\x00\x00\xcd\x80\x50\x5b\xe8\xd0\xff\xff\xff\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21\x00\x59\xb8\x04\x00\x00\x00\xbb\x01\x00\x00\x00\xba\x0d\x00\x00\x00\xcd\x80"